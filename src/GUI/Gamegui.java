
package GUI;

import Class.Gui;
import java.awt.Toolkit;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Feyesel Sultan
 */
public class Gamegui extends javax.swing.JFrame {

    /**
     * Creates new form Gamegui
     */
    public Gamegui() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        l_reset = new javax.swing.JLabel();
        l_notify = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        l_life = new javax.swing.JLabel();
        l_guess = new javax.swing.JLabel();
        l_score = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        f_guess = new javax.swing.JTextField();
        l_show = new javax.swing.JLabel();
        l_showrandom = new javax.swing.JLabel();
        l_unshow = new javax.swing.JLabel();
        btn_newrandom = new javax.swing.JButton();
        btn_guess = new javax.swing.JButton();
        l_remark = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GUESSING GAME");
        setResizable(false);

        l_reset.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l_reset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/Reset1 (1).png"))); // NOI18N
        l_reset.setToolTipText("RESET BUTTON");
        l_reset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                l_resetMouseClicked(evt);
            }
        });

        l_notify.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l_notify.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setBackground(new java.awt.Color(255, 153, 0));
        jLabel3.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("****** GUESSING GAME ******");
        jLabel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel3.setOpaque(true);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/main1.png"))); // NOI18N

        l_life.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l_life.setText("Life: 10");
        l_life.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        l_guess.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l_guess.setText("Guess: 0");
        l_guess.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        l_score.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l_score.setText("Score: 0");
        l_score.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel8.setFont(new java.awt.Font("Sitka Text", 1, 12)); // NOI18N
        jLabel8.setText("Enter your Number (1-1000)");
        jLabel8.setToolTipText("");

        f_guess.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f_guess.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                f_guessKeyTyped(evt);
            }
        });

        l_show.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l_show.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/visible.png"))); // NOI18N
        l_show.setToolTipText("VISIBLE");
        l_show.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        l_show.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                l_showMouseClicked(evt);
            }
        });

        l_showrandom.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        l_showrandom.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l_showrandom.setText("?");
        l_showrandom.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        l_unshow.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l_unshow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/invisible.png"))); // NOI18N
        l_unshow.setToolTipText("HIDE");
        l_unshow.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        l_unshow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                l_unshowMouseClicked(evt);
            }
        });

        btn_newrandom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/shuffle1.png"))); // NOI18N
        btn_newrandom.setText("New Random Number");
        btn_newrandom.setToolTipText("GENERATE NEW RANDOM NUMBER");
        btn_newrandom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_newrandomActionPerformed(evt);
            }
        });

        btn_guess.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/correct1.png"))); // NOI18N
        btn_guess.setText("Guess");
        btn_guess.setToolTipText("YOUR GUESS");
        btn_guess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guessActionPerformed(evt);
            }
        });

        l_remark.setBackground(new java.awt.Color(255, 153, 0));
        l_remark.setFont(new java.awt.Font("Sitka Text", 1, 12)); // NOI18N
        l_remark.setForeground(new java.awt.Color(255, 255, 255));
        l_remark.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l_remark.setText("********************* Try Your luck  *********************");
        l_remark.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        l_remark.setOpaque(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(l_remark, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(l_reset, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_notify, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(l_score, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(l_guess, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(12, 12, 12)
                                        .addComponent(l_life, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE))
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btn_newrandom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(f_guess, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(l_showrandom, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(l_show, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(l_unshow, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btn_guess, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(l_reset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(l_notify, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(l_score, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l_guess, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l_life, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(l_show, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(l_showrandom, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(l_unshow, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(f_guess, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_newrandom, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_guess, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l_remark, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_newrandomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_newrandomActionPerformed
        //generate random number button
        randomNew();
    }//GEN-LAST:event_btn_newrandomActionPerformed

    private void btn_guessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guessActionPerformed
        // guess button
        guess();
    }//GEN-LAST:event_btn_guessActionPerformed

    private void l_showMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_l_showMouseClicked
        // show lable mouse click
        l_show.setEnabled(false);
        l_unshow.setEnabled(true);
        l_showrandom.setText(String.valueOf(random));
    }//GEN-LAST:event_l_showMouseClicked

    private void l_unshowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_l_unshowMouseClicked
        // hide/unshow button clicked
        l_show.setEnabled(true);
        l_unshow.setEnabled(false);
        l_showrandom.setText("?");
    }//GEN-LAST:event_l_unshowMouseClicked

    private void f_guessKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_f_guessKeyTyped
        // guess text box type something
        Gui._onlyIntiger(evt);
    }//GEN-LAST:event_f_guessKeyTyped

    private void l_resetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_l_resetMouseClicked
        // reset click event
        Object[] options = {"YES","NO"};
        int x = JOptionPane.showOptionDialog(this, "DO YOU WANT TO RESET (YES/NO)?", "MESSAGE", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, null);
        if(x == JOptionPane.YES_OPTION){
           reset(); 
        }
    }//GEN-LAST:event_l_resetMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gamegui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gamegui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gamegui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gamegui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gamegui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_guess;
    private javax.swing.JButton btn_newrandom;
    private javax.swing.JTextField f_guess;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel l_guess;
    private javax.swing.JLabel l_life;
    private javax.swing.JLabel l_notify;
    private javax.swing.JLabel l_remark;
    private javax.swing.JLabel l_reset;
    private javax.swing.JLabel l_score;
    private javax.swing.JLabel l_show;
    private javax.swing.JLabel l_showrandom;
    private javax.swing.JLabel l_unshow;
    // End of variables declaration//GEN-END:variables
//initialize component
    Gui gui;
//variables declare here
    private int random=0, bestScore=0, yourScore=0, addCorrectScore=3;
    private byte guessCount=0, lifeCount=10, greatrThanError=0, lessThanError=0;
   
    private void init(){//start init
        gui = new Gui();
        //icon
        gui.setIconFrame(this);
        //load random number
        random = GuessNumber._randomNumber();
        
        l_unshow.setEnabled(false);
    }//end init
    
    //create random
    private void randomNew(){
        random = GuessNumber._randomNumber();
        f_guess.setText("");//clear field
        f_guess.requestFocus();
        
        l_show.setEnabled(true);
        l_unshow.setEnabled(false);
        l_showrandom.setText("?");
    }
    
    private void guess(){//start validate
        if(f_guess.getText().equals("")){
          Gui._message("PLEASE ENTER YOUR NUMBER!", 0);
          f_guess.requestFocus();
        }else if(Integer.parseInt(f_guess.getText()) >= 1001 || Integer.parseInt(f_guess.getText()) <=0){
          Gui._message("PLEASE ENTER NUMBER BETWEEN 1-1000", 0);
          f_guess.setText("");//clear field
          f_guess.requestFocus();
        }else{
            int yourNumber = Integer.parseInt(f_guess.getText());
            //correct guess
            if(yourNumber == random){
               Gui._message("YOU WIN !\nADDITIONAL 3 LIFE ADDED !",1);
               yourScore++;  
               l_score.setText("Score: "+yourScore);
               f_guess.setText("");//clear field
               f_guess.requestFocus();
               //add life
               lifeCount+=addCorrectScore;
               l_life.setText("Life: "+lifeCount);
               
               guessCount++;
               l_guess.setText("Guess: "+guessCount);
               
               //notify lable
               if(guessCount==1){
                   l_notify.setText("EXELLENT");
               }else if(guessCount==2){
                   l_notify.setText("GREAT");
               }else if(guessCount==3){
                   l_notify.setText("FAIR");
               }
               //PLAY AGAIN 
                Object[] options = {"YES","NO"};
                int x = JOptionPane.showOptionDialog(this, "DO YOU WANT TO CONTINUE PLAYING (YES/NO)?",
                        "MESSAGE", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE,
                        null, options, null);
                if(x == JOptionPane.YES_OPTION){
                   newGame(lifeCount); 
                }else{
                   System.exit(0);
                }
                
            }else{//incorrect guess
               lifeCount--; 
               l_life.setText("Life: "+lifeCount);
               f_guess.setText("");//clear field
               f_guess.requestFocus();
               //warning if life is less 5
               if(lifeCount <= 4){
                   l_life.setIcon(new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Asset/warning.png"))));
               }else{
                   l_life.setIcon(null);
               }
               //create hint
               hint(random,yourNumber);
               ///life reach 0
               if(lifeCount==0){
                   Gui._message("YOU HAVE USED ALL YOUR LIFE!\nTRY AGAIN LATER!", 0);
                   //PLAY AGAIN 
                    Object[] options = {"YES","NO"};
                    int x = JOptionPane.showOptionDialog(this, "DO YOU WANT TO PLAY AGAIN (YES/NO)?",
                            "MESSAGE", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE,
                            null, options, null);
                    if(x == JOptionPane.YES_OPTION){
                       newGame(); 
                    }else{
                       System.exit(0);
                    }
               }
               guessCount++;
               l_guess.setText("Guess: "+guessCount);
            }
            
           
        }
        
    }//end validate guess fun
    
    private void hint(int rand, int yournumber){ //start hint fun
        String msg;
        if(rand>yournumber){
            lessThanError++;
            msg = messageHint(lessThanError,(byte) 1, yournumber);
            l_remark.setText(msg);
        }else{
            greatrThanError++;
            msg = messageHint(greatrThanError,(byte) 0, yournumber);
            l_remark.setText(msg);
        }
    }//end hint fun
    
    //message hin array handle
    private String messageHint(byte errorCount, byte errorCatch, int numGuess){//start
        String message;
        switch(errorCatch){//statr
            case 1:
                String messageCat[] = {
                String.valueOf(numGuess)+" is less than the number! Be observant!",
                String.valueOf(numGuess)+" is less than the number! Increse your guess!",
                String.valueOf(numGuess)+" is less than the number! guess bigger number!"};
                
                if(errorCount <3){
                   message =  String.valueOf(numGuess)+" is less than the random number!";
                }else{
                   int rand = (int) Math.round(Math.random()*2);
                   message = messageCat[rand];
                }
                break;
            default:
                String messageCat1[] = {
                String.valueOf(numGuess)+" is Greater than the number! Be observant!",
                String.valueOf(numGuess)+" is Greater than the number! Decrese your guess!",
                String.valueOf(numGuess)+" is Greater than the number! guess Samll number!"};
                
                if(errorCount <3){
                   message =  String.valueOf(numGuess)+" is Greater than the random number!";
                }else{
                   int rand = (int) Math.round(Math.random()*2);
                   message = messageCat1[rand];
                }
                break;
        }//end switch ststment
        return  message;
    }//end
    
    //create new Game
    private void newGame(){
        f_guess.setText("");
        f_guess.requestFocus();
        
        l_remark.setText("********************* Try Your luck :) *********************");
        l_unshow.setEnabled(false);
        l_show.setEnabled(true);
        l_showrandom.setText("?");
        l_life.setText("Life: 10");
        l_guess.setText("Guess: 0");
        l_notify.setText("");
        guessCount=0;
        lifeCount=10;
        greatrThanError=0;
        lessThanError=0;
        random = GuessNumber._randomNumber();
        l_life.setIcon(null);
    }//new game end
    
    //create new Game
    private void newGame(byte life){
        f_guess.setText("");
        f_guess.requestFocus();
        
        l_remark.setText("********************* Try Your luck :) *********************");
        l_unshow.setEnabled(false);
        l_show.setEnabled(true);
        l_showrandom.setText("?");
        //l_guess.setText("Guess: 0");
        //l_notify.setText("");
        //guessCount=0;
        lifeCount = life;
        greatrThanError=0;
        lessThanError=0;
        random = GuessNumber._randomNumber();
        l_life.setIcon(null);
    }//new game end
    
    //reset function
    private void reset(){
        f_guess.setText("");
        f_guess.requestFocus();
        
        l_remark.setText("********************* Try Your luck :) *********************");
        l_unshow.setEnabled(false);
        l_show.setEnabled(true);
        l_showrandom.setText("?");
        l_life.setText("Life: 10");
        l_guess.setText("Guess: 0");
        l_score.setText("Score: 0");
        l_notify.setText("");
        guessCount=0;
        lifeCount=10;
        greatrThanError=0;
        lessThanError=0;
        yourScore = 0;
        random = GuessNumber._randomNumber();
        l_life.setIcon(null);
    }//new game end

}//end class
